services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 49maine-app
    restart: unless-stopped
    env_file:
      - .env.production
    volumes:
      # Persist SQLite database
      - db-data:/app/prisma
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: 49maine-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # For Let's Encrypt SSL certificates
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - nextjs
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Uncomment to enable automatic SSL certificate renewal
  # certbot:
  #   image: certbot/certbot
  #   container_name: 49maine-certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - certbot-www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
  certbot-etc:
    driver: local
  certbot-var:
    driver: local
  certbot-www:
    driver: local
